{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Temas que vamos a tratar. MkDocs: Resumen y Ventajas e Inconvenientes GitHub: Plataforma de alojamiento de c\u00f3digo Javascript Ejercicio realizado por Jaime Pulido D\u00edaz","title":"Home"},{"location":"#temas-que-vamos-a-tratar","text":"MkDocs: Resumen y Ventajas e Inconvenientes GitHub: Plataforma de alojamiento de c\u00f3digo Javascript","title":"Temas que vamos  a tratar."},{"location":"#ejercicio-realizado-por-jaime-pulido-diaz","text":"","title":"Ejercicio realizado por Jaime Pulido D\u00edaz"},{"location":"pagina1/","text":"MkDocs: Resumen y Ventajas e Inconvenientes MkDocs es una herramienta de generaci\u00f3n de sitios est\u00e1ticos que se basa en Markdown y permite crear documentaci\u00f3n para proyectos de forma sencilla y r\u00e1pida. A continuaci\u00f3n, se presentan algunas de las ventajas e inconvenientes de utilizar MkDocs para generar sitios est\u00e1ticos: Ventajas Facilidad de uso: MkDocs es una herramienta f\u00e1cil de usar, ya que se basa en Markdown, un lenguaje de marcado sencillo y accesible para cualquier usuario. Flexibilidad: MkDocs permite personalizar el aspecto de la documentaci\u00f3n a trav\u00e9s de temas y plugins. Comunidad activa: MkDocs cuenta con una comunidad activa de desarrolladores y usuarios que est\u00e1n dispuestos a ayudar y compartir sus experiencias. Integraci\u00f3n con Git y GitHub: MkDocs se integra f\u00e1cilmente con sistemas de control de versiones como Git y plataformas de alojamiento como GitHub. Inconvenientes Limitaciones de Markdown: Aunque Markdown es un lenguaje de marcado sencillo y accesible, tambi\u00e9n tiene sus limitaciones, lo que puede limitar la capacidad de personalizaci\u00f3n de la documentaci\u00f3n generada con MkDocs. Dependencia de Python: MkDocs est\u00e1 construido en Python, lo que puede resultar en una barrera para aquellos que no est\u00e1n familiarizados con el lenguaje. En resumen, MkDocs es una herramienta \u00fatil para generar sitios est\u00e1ticos de documentaci\u00f3n de proyectos de forma sencilla y r\u00e1pida, pero tambi\u00e9n tiene sus limitaciones y requiere cierto conocimiento de Python para su implementaci\u00f3n y personalizaci\u00f3n.","title":"MKDOCS"},{"location":"pagina1/#mkdocs-resumen-y-ventajas-e-inconvenientes","text":"MkDocs es una herramienta de generaci\u00f3n de sitios est\u00e1ticos que se basa en Markdown y permite crear documentaci\u00f3n para proyectos de forma sencilla y r\u00e1pida. A continuaci\u00f3n, se presentan algunas de las ventajas e inconvenientes de utilizar MkDocs para generar sitios est\u00e1ticos:","title":"MkDocs: Resumen y Ventajas e Inconvenientes"},{"location":"pagina1/#ventajas","text":"Facilidad de uso: MkDocs es una herramienta f\u00e1cil de usar, ya que se basa en Markdown, un lenguaje de marcado sencillo y accesible para cualquier usuario. Flexibilidad: MkDocs permite personalizar el aspecto de la documentaci\u00f3n a trav\u00e9s de temas y plugins. Comunidad activa: MkDocs cuenta con una comunidad activa de desarrolladores y usuarios que est\u00e1n dispuestos a ayudar y compartir sus experiencias. Integraci\u00f3n con Git y GitHub: MkDocs se integra f\u00e1cilmente con sistemas de control de versiones como Git y plataformas de alojamiento como GitHub.","title":"Ventajas"},{"location":"pagina1/#inconvenientes","text":"Limitaciones de Markdown: Aunque Markdown es un lenguaje de marcado sencillo y accesible, tambi\u00e9n tiene sus limitaciones, lo que puede limitar la capacidad de personalizaci\u00f3n de la documentaci\u00f3n generada con MkDocs. Dependencia de Python: MkDocs est\u00e1 construido en Python, lo que puede resultar en una barrera para aquellos que no est\u00e1n familiarizados con el lenguaje. En resumen, MkDocs es una herramienta \u00fatil para generar sitios est\u00e1ticos de documentaci\u00f3n de proyectos de forma sencilla y r\u00e1pida, pero tambi\u00e9n tiene sus limitaciones y requiere cierto conocimiento de Python para su implementaci\u00f3n y personalizaci\u00f3n.","title":"Inconvenientes"},{"location":"pagina2/","text":"GitHub: Plataforma de alojamiento de c\u00f3digo GitHub es una plataforma de alojamiento de c\u00f3digo que se basa en Git, un sistema de control de versiones distribuido. GitHub permite a los desarrolladores alojar y colaborar en proyectos de c\u00f3digo abierto y privados. A continuaci\u00f3n, se presentan algunas de las ventajas e inconvenientes de utilizar GitHub para alojar y colaborar en proyectos. \u00bfQu\u00e9 es GitHub? GitHub es una plataforma que permite a los desarrolladores alojar, colaborar y compartir c\u00f3digo. Los proyectos alojados en GitHub se pueden acceder y descargar de forma gratuita. Adem\u00e1s, GitHub ofrece herramientas de seguimiento de problemas y errores, integraci\u00f3n con herramientas de desarrollo y gesti\u00f3n de proyectos, y la posibilidad de colaborar con otros desarrolladores en proyectos de c\u00f3digo abierto. Ventajas de utilizar GitHub Alojamiento gratuito de proyectos p\u00fablicos: GitHub permite alojar proyectos p\u00fablicos de forma gratuita, lo que hace que sea una plataforma accesible para cualquier persona o equipo que desee colaborar en proyectos de c\u00f3digo abierto. F\u00e1cil colaboraci\u00f3n y seguimiento de cambios: GitHub facilita la colaboraci\u00f3n entre varios desarrolladores en un proyecto, permitiendo el seguimiento de cambios, la revisi\u00f3n de c\u00f3digo y la resoluci\u00f3n de problemas. Comunidad activa: GitHub cuenta con una comunidad activa de desarrolladores y usuarios que comparten sus proyectos, contribuyen a proyectos de c\u00f3digo abierto y brindan soporte a otros usuarios. Integraci\u00f3n con herramientas y servicios: GitHub se integra f\u00e1cilmente con otras herramientas y servicios, como plataformas de automatizaci\u00f3n de pruebas, servicios de implementaci\u00f3n continua y herramientas de gesti\u00f3n de proyectos. Inconvenientes de utilizar GitHub Alojamiento de proyectos privados de pago: GitHub cobra una tarifa mensual para alojar proyectos privados, lo que puede limitar el acceso a la plataforma para aquellos que no puedan pagar. Dependencia de una conexi\u00f3n a internet estable: GitHub requiere una conexi\u00f3n a internet estable para su uso, lo que puede ser un problema en \u00e1reas con conexiones de baja calidad o intermitentes. Git y GitHub GitHub se basa en Git, un sistema de control de versiones distribuido. Git permite a los desarrolladores rastrear cambios en el c\u00f3digo y colaborar con otros desarrolladores en un proyecto. GitHub proporciona una interfaz web para trabajar con Git, lo que facilita la colaboraci\u00f3n y el seguimiento de cambios en un proyecto. Repositorios Un repositorio es un lugar donde se almacena el c\u00f3digo fuente de un proyecto. Los repositorios alojados en GitHub son p\u00fablicos o privados y se pueden acceder a ellos y descargarlos de forma gratuita. Ramas Una rama es una versi\u00f3n del c\u00f3digo fuente en un repositorio. Los desarrolladores pueden crear ramas para trabajar en nuevas caracter\u00edsticas o solucionar problemas sin afectar la rama principal del c\u00f3digo fuente. GitHub facilita la creaci\u00f3n y administraci\u00f3n de ramas. Solicitudes de extracci\u00f3n Las solicitudes de extracci\u00f3n son una forma en que los desarrolladores pueden colaborar en un proyecto en GitHub. Una solicitud de extracci\u00f3n permite a los desarrolladores compartir su c\u00f3digo con otros y solicitar comentarios o cambios antes de integrar el c\u00f3digo en la rama principal del repositorio. Personalizaci\u00f3n de GitHub GitHub ofrece herramientas para personalizar la apariencia.","title":"Github"},{"location":"pagina2/#github-plataforma-de-alojamiento-de-codigo","text":"GitHub es una plataforma de alojamiento de c\u00f3digo que se basa en Git, un sistema de control de versiones distribuido. GitHub permite a los desarrolladores alojar y colaborar en proyectos de c\u00f3digo abierto y privados. A continuaci\u00f3n, se presentan algunas de las ventajas e inconvenientes de utilizar GitHub para alojar y colaborar en proyectos.","title":"GitHub: Plataforma de alojamiento de c\u00f3digo"},{"location":"pagina2/#que-es-github","text":"GitHub es una plataforma que permite a los desarrolladores alojar, colaborar y compartir c\u00f3digo. Los proyectos alojados en GitHub se pueden acceder y descargar de forma gratuita. Adem\u00e1s, GitHub ofrece herramientas de seguimiento de problemas y errores, integraci\u00f3n con herramientas de desarrollo y gesti\u00f3n de proyectos, y la posibilidad de colaborar con otros desarrolladores en proyectos de c\u00f3digo abierto.","title":"\u00bfQu\u00e9 es GitHub?"},{"location":"pagina2/#ventajas-de-utilizar-github","text":"Alojamiento gratuito de proyectos p\u00fablicos: GitHub permite alojar proyectos p\u00fablicos de forma gratuita, lo que hace que sea una plataforma accesible para cualquier persona o equipo que desee colaborar en proyectos de c\u00f3digo abierto. F\u00e1cil colaboraci\u00f3n y seguimiento de cambios: GitHub facilita la colaboraci\u00f3n entre varios desarrolladores en un proyecto, permitiendo el seguimiento de cambios, la revisi\u00f3n de c\u00f3digo y la resoluci\u00f3n de problemas. Comunidad activa: GitHub cuenta con una comunidad activa de desarrolladores y usuarios que comparten sus proyectos, contribuyen a proyectos de c\u00f3digo abierto y brindan soporte a otros usuarios. Integraci\u00f3n con herramientas y servicios: GitHub se integra f\u00e1cilmente con otras herramientas y servicios, como plataformas de automatizaci\u00f3n de pruebas, servicios de implementaci\u00f3n continua y herramientas de gesti\u00f3n de proyectos.","title":"Ventajas de utilizar GitHub"},{"location":"pagina2/#inconvenientes-de-utilizar-github","text":"Alojamiento de proyectos privados de pago: GitHub cobra una tarifa mensual para alojar proyectos privados, lo que puede limitar el acceso a la plataforma para aquellos que no puedan pagar. Dependencia de una conexi\u00f3n a internet estable: GitHub requiere una conexi\u00f3n a internet estable para su uso, lo que puede ser un problema en \u00e1reas con conexiones de baja calidad o intermitentes.","title":"Inconvenientes de utilizar GitHub"},{"location":"pagina2/#git-y-github","text":"GitHub se basa en Git, un sistema de control de versiones distribuido. Git permite a los desarrolladores rastrear cambios en el c\u00f3digo y colaborar con otros desarrolladores en un proyecto. GitHub proporciona una interfaz web para trabajar con Git, lo que facilita la colaboraci\u00f3n y el seguimiento de cambios en un proyecto.","title":"Git y GitHub"},{"location":"pagina2/#repositorios","text":"Un repositorio es un lugar donde se almacena el c\u00f3digo fuente de un proyecto. Los repositorios alojados en GitHub son p\u00fablicos o privados y se pueden acceder a ellos y descargarlos de forma gratuita.","title":"Repositorios"},{"location":"pagina2/#ramas","text":"Una rama es una versi\u00f3n del c\u00f3digo fuente en un repositorio. Los desarrolladores pueden crear ramas para trabajar en nuevas caracter\u00edsticas o solucionar problemas sin afectar la rama principal del c\u00f3digo fuente. GitHub facilita la creaci\u00f3n y administraci\u00f3n de ramas.","title":"Ramas"},{"location":"pagina2/#solicitudes-de-extraccion","text":"Las solicitudes de extracci\u00f3n son una forma en que los desarrolladores pueden colaborar en un proyecto en GitHub. Una solicitud de extracci\u00f3n permite a los desarrolladores compartir su c\u00f3digo con otros y solicitar comentarios o cambios antes de integrar el c\u00f3digo en la rama principal del repositorio.","title":"Solicitudes de extracci\u00f3n"},{"location":"pagina2/#personalizacion-de-github","text":"GitHub ofrece herramientas para personalizar la apariencia.","title":"Personalizaci\u00f3n de GitHub"},{"location":"pagina3/","text":"Javascript \u00bfQue es Javasript y para que sirve? JavaScript es un lenguaje de programaci\u00f3n que los desarrolladores utilizan para hacer p\u00e1ginas web interactivas. Desde actualizar fuentes de redes sociales a mostrar animaciones y mapas interactivos, las funciones de JavaScript pueden mejorar la experiencia del usuario de un sitio web. Ventajas de Javascript Velocidad - JavaScript tiende a ser muy r\u00e1pido porque a menudo se ejecuta inmediatamente en el navegador. Entonces mientras no requiera recursos externos, JavaScript no tiene permitido retrasarse por llamados del servidor backend. Simplicidad - La sintaxis de JavaScript est\u00e1 inspirada por Java y es relativamente sencillo de aprender comparado a otros lenguajes de programaci\u00f3n populares como C++. Popularidad - JavaScript esta por todas partes de la web, y con la llegada de Node.js, se ha incrementado su uso en backend. Hay incontables recursos para aprender JavaScript. Tanto StackOverflow como GitHub muestran un creciente n\u00famero de proyectos que usan JavaScript, y la popularidad que ha alcanzado en los recientes a\u00f1os se espera que siga creciendo. Compatibilidad - A diferencia de PHP u otros lenguajes scripting, JavaScript puede ser usado en cualquier p\u00e1gina web. JavaScript puede ser usado en diferentes tipos de aplicaciones gracias al soporte en otros lenguajes como Pearl y PHP. Interfaces sencillas- JavaScript puede ser usado para crear caracter\u00edsticas como arrastrar y soltar, y componentes tales como las diapositivas, lo cual mejora enormemente la interfaz de usuario y la experiencia del sitio. Versatilidad - Hay muchos m\u00e9todos para usar JavaScript mediante servidores Node.js. Si t\u00fa estas en bootstrap Node.js con Express, puedes usar un documento database como MongoDB, y usar JavaScript en el frontend para clientes. Es posible desarrollar una aplicaci\u00f3n completa de JavaScript desde principio a fin solo usando JavaScript. Actualizaciones - Desde que la llegada de ECMAScript 5 (la especificaci\u00f3n escrita en que se basa JavaScript), ECMA International se ha dedicado a actualizar JavaScript anualmente. Hasta el momento, hemos recibido soporte para el navegador ES6 en 2017 y esperamos que ES7 sea soportado en un futuro. Ejemplo de Javascript <script> function popup() { alert(\"Hola gente\") } </script> <button type=\"button\" onclick=\"popup()\">Probar funci\u00f3n</button>","title":"Javascript"},{"location":"pagina3/#javascript","text":"","title":"Javascript"},{"location":"pagina3/#que-es-javasript-y-para-que-sirve","text":"JavaScript es un lenguaje de programaci\u00f3n que los desarrolladores utilizan para hacer p\u00e1ginas web interactivas. Desde actualizar fuentes de redes sociales a mostrar animaciones y mapas interactivos, las funciones de JavaScript pueden mejorar la experiencia del usuario de un sitio web.","title":"\u00bfQue es Javasript  y para que sirve?"},{"location":"pagina3/#ventajas-de-javascript","text":"Velocidad - JavaScript tiende a ser muy r\u00e1pido porque a menudo se ejecuta inmediatamente en el navegador. Entonces mientras no requiera recursos externos, JavaScript no tiene permitido retrasarse por llamados del servidor backend. Simplicidad - La sintaxis de JavaScript est\u00e1 inspirada por Java y es relativamente sencillo de aprender comparado a otros lenguajes de programaci\u00f3n populares como C++. Popularidad - JavaScript esta por todas partes de la web, y con la llegada de Node.js, se ha incrementado su uso en backend. Hay incontables recursos para aprender JavaScript. Tanto StackOverflow como GitHub muestran un creciente n\u00famero de proyectos que usan JavaScript, y la popularidad que ha alcanzado en los recientes a\u00f1os se espera que siga creciendo. Compatibilidad - A diferencia de PHP u otros lenguajes scripting, JavaScript puede ser usado en cualquier p\u00e1gina web. JavaScript puede ser usado en diferentes tipos de aplicaciones gracias al soporte en otros lenguajes como Pearl y PHP. Interfaces sencillas- JavaScript puede ser usado para crear caracter\u00edsticas como arrastrar y soltar, y componentes tales como las diapositivas, lo cual mejora enormemente la interfaz de usuario y la experiencia del sitio. Versatilidad - Hay muchos m\u00e9todos para usar JavaScript mediante servidores Node.js. Si t\u00fa estas en bootstrap Node.js con Express, puedes usar un documento database como MongoDB, y usar JavaScript en el frontend para clientes. Es posible desarrollar una aplicaci\u00f3n completa de JavaScript desde principio a fin solo usando JavaScript. Actualizaciones - Desde que la llegada de ECMAScript 5 (la especificaci\u00f3n escrita en que se basa JavaScript), ECMA International se ha dedicado a actualizar JavaScript anualmente. Hasta el momento, hemos recibido soporte para el navegador ES6 en 2017 y esperamos que ES7 sea soportado en un futuro.","title":"Ventajas de Javascript"},{"location":"pagina3/#ejemplo-de-javascript","text":"<script> function popup() { alert(\"Hola gente\") } </script> <button type=\"button\" onclick=\"popup()\">Probar funci\u00f3n</button>","title":"Ejemplo de Javascript"}]}